<%- include("partials/header"); %>


    <div class="header">
        <nav class="navbar navbar-light bg-light left" style="padding: 0%;">
            <div class="menu-item active" onclick="toggleActive(this)">My Blogs</div>
            <div class="menu-item" onclick="toggleActive(this)">Following</div>
        </nav>
        <div class="input-group ps-5 right search">
            <div id="navbar-search-autocomplete" class="form-outline" style="margin-right: 10px;">
                <input type="search" id="form1" class="form-control" style="width: 300px;"
                    placeholder="Search for People" />
                <button type="button" class="btn btn-primary" style="" onclick="submitSearch()">
                    <i class="fas fa-search"></i>
                </button>
            </div>

            <div id="matchedUsernames"></div>

        </div>

    </div>


    <div id="my-blogs-container" class="my-blogs">
        <% myBlogs.forEach(function(data) { %>
            <div class="chat-message">
                <div class="title-with-button">
                    <div class="title">
                        <%= data.title %>
                    </div>
                    <button class="delete-button" value="<%= data._id %>">
                        <i class=" fas fa-trash-alt"></i>
                    </button>
                </div>
                <div class="content">
                    <%= data.content %>
                </div>
                <div class="clock-icon">
                    <i class="far fa-clock"></i>
                    <%= new Date(data.timestamp).toLocaleString() %>
                </div>
            </div>
            <hr>
            <% }); %>
    </div>


    <!-- Compose button with pencil icon -->
    <a href="/compose" class="compose-button">
        <i class="fas fa-pencil-alt"></i> Compose
    </a>
    <a href="#" class="logout-button" onclick="confirmLogout()">
        <i class="fas fa-sign-out-alt"></i> Logout
    </a>
    <div id="following-blogs-container" class="following-blogs" style="display: none;">
        <% followingBlogs.forEach(function(data) { %>
            <div class="chat-message">
                <div class="username-with-button">
                    <div class="username">
                        <%= data.author %>
                    </div>
                    <button class="unfollow-button" value="<%= data._id %>">
                        <i class="fas fa-user-times"></i>
                    </button>
                </div>
                <div class="title">
                    <%= data.title %>
                </div>
                <div class="content">
                    <%= data.content %>
                </div>
                <div class="clock-icon">
                    <i class="far fa-clock"></i>
                    <%= new Date(data.timestamp).toLocaleString() %>
                </div>
            </div>
            <hr>
            <% }); %>
    </div>

    <script>
        function submitSearch() {
            const searchInput = document.getElementById("form1");
            const matchedUsernamesDiv = document.getElementById("matchedUsernames");
            const searchQuery = searchInput.value.toLowerCase().trim();
            console.log(searchInput.value);
            // Clear the matched usernames div
            matchedUsernamesDiv.innerHTML = "";

            if (searchQuery.length === 0) {
                return;
            }
            $.ajax({
                url: `/search-users?query=${searchQuery}`,
                method: "GET",
                dataType: "json",
                success: function (matchedUsers) {

                    matchedUsers.forEach((user) => {
                        const form = document.createElement("form");
                        form.method = "POST";
                        form.action = "/add-following";

                        const userIdInput = document.createElement("input");
                        userIdInput.type = "hidden";
                        userIdInput.name = "userToFollowID";
                        userIdInput.value = user._id;

                        const label = document.createElement("label");
                        label.innerHTML = user.username;

                        const addButton = document.createElement("button");
                        addButton.type = "submit";
                        addButton.innerHTML = '<i class="fas fa-user-plus"></i> Add';

                        const hr = document.createElement("hr");

                        form.appendChild(userIdInput);
                        form.appendChild(label);
                        form.appendChild(addButton);
                        form.appendChild(hr);
                        matchedUsernamesDiv.appendChild(form);
                    });

                    // Show the matched usernames div
                    matchedUsernamesDiv.style.display = "block";

                },
                error: function (error) {
                    console.error("Error fetching data:", error);
                },
            });
            function addFollowingFormSubmit(form) {
                // Submit the form using AJAX
                $.ajax({
                    url: form.action,
                    method: "POST",
                    data: $(form).serialize(),
                    success: function (response) {
                        // Show a success pop-up notification
                        Swal.fire({
                            icon: "success",
                            title: "User added to your following",
                            text: "The request to follow this user has been sent.",
                        });
                    },
                    error: function (error) {
                        console.error("Error adding user to following list:", error);
                    },
                });
            }
            $(document).on("submit", "form", function (event) {
                event.preventDefault();
                addFollowingFormSubmit(this);
            });
            function hideMatchedUsernames() {
                const matchedUsernamesDiv = document.getElementById("matchedUsernames");
                matchedUsernamesDiv.style.display = "none";
            }

            // Listen for click events on the document
            document.addEventListener("click", function (event) {
                const matchedUsernamesDiv = document.getElementById("matchedUsernames");

                // Check if the clicked element is outside the matchedUsernamesDiv
                if (!matchedUsernamesDiv.contains(event.target)) {
                    hideMatchedUsernames();
                }
            });



        }

        function toggleActive(element) {
            const menuItems = document.getElementsByClassName("menu-item");
            for (const item of menuItems) {
                item.classList.remove("active");
            }
            element.classList.add("active");

            const myBlogsContainer = document.getElementById("my-blogs-container");
            const followingBlogsContainer = document.getElementById("following-blogs-container");

            if (element.innerText === "My Blogs") {
                myBlogsContainer.style.display = "block";
                followingBlogsContainer.style.display = "none";
            } else if (element.innerText === "Following") {
                myBlogsContainer.style.display = "none";
                followingBlogsContainer.style.display = "block";
            }
        }
        function confirmLogout() {

            // Show a confirmation dialog
            const confirmLogout = confirm("Are you sure you want to log out?");

            // If user confirms, redirect to the logout URL
            if (confirmLogout) {
                window.location.href = "/logout";
            } else {
                console.log("noo logout lol");
            }
        }


        $(".delete-button").on("click", function () {
            // Get the blog ID from the data attribute
            const blogId = $(this).val();

            // Show a confirm dialog using Swal
            Swal.fire({
                icon: "warning",
                title: "Are you sure?",
                text: "You are about to delete the selected blog. This action cannot be undone.",
                showCancelButton: true,
                confirmButtonColor: "#d33",
                cancelButtonColor: "#3085d6",
                confirmButtonText: "Delete",
                cancelButtonText: "Cancel",
            }).then((result) => {
                // If the user confirms the deletion (clicks "Delete" button), proceed with the delete request
                if (result.isConfirmed) {
                    // Make an AJAX request to the backend to delete the blog
                    $.ajax({
                        url: `/delete-blog/${blogId}`, // Replace this with your backend route to delete a blog
                        method: "GET",
                        success: function (response) {

                            // Handle the success response if needed
                            Swal.fire({
                                icon: "success",
                                title: "Deleted!",
                                text: "The selected Blog is deleted!",
                            }).then(() => {
                                // After the user clicks "OK" on the success Swal popup, refresh the page
                                location.reload();
                            });

                            // If the blog was successfully deleted, remove the chat message from the DOM
                            $(this).closest(".chat-message").remove();
                        },
                        error: function (error) {
                            // Handle the error response if needed
                            console.error("Error deleting blog:", error);
                        },
                    });
                }
            });
        });


        $(".unfollow-button").on("click", function () {

            const personId = $(this).val();
            Swal.fire({
                icon: "warning",
                title: "Are you sure?",
                text: "You are about to unfollow the selected person",
                showCancelButton: true,
                confirmButtonColor: "#d33",
                cancelButtonColor: "#3085d6",
                confirmButtonText: "Unfollow",
                cancelButtonText: "Cancel",
            }).then((result) => {
                // If the user confirms the deletion (clicks "Delete" button), proceed with the delete request
                if (result.isConfirmed) {
                    // Make an AJAX request to the backend to delete the blog
                    $.ajax({
                        url: `/unfollow/${personId}`, // Replace this with your backend route to delete a blog
                        method: "GET",
                        success: function (response) {

                            // Handle the success response if needed
                            Swal.fire({
                                icon: "success",
                                title: "Unfollowed!",
                                text: "You unfollowed the user!",
                            }).then(() => {
                                // After the user clicks "OK" on the success Swal popup, refresh the page
                                location.reload();
                            });

                            // If the blog was successfully deleted, remove the chat message from the DOM
                            $(this).closest(".chat-message").remove();
                        },
                        error: function (error) {
                            // Handle the error response if needed
                            console.error("Error unfollowing person:", error);
                        },
                    });
                }
            });
        });

    </script>